package de.bund.bka.idvk.vutot.util;

import de.bund.bka.idvk.vutot.pages.BasePage;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.io.IOUtils;

import java.lang.reflect.Field;
import java.net.URL;
import java.net.URLConnection;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

@Slf4j
public class BasePageFactory {

    //key=Class Name | value=instance of the class
    private static final Map<String, BasePage> instances = new HashMap<>();

    //key=Class Name | value=array of fields in the class
    static final Map<String, Field[]> classVariables = new HashMap<>();

    private static final String PATH_TO_PAGES_PKG = "de/bund/bka/idvk/vutot/pages";

    static {
        try {
            loadClasses(BasePageFactory.class.getClassLoader());
        } catch (Exception e) {
            log.error("Sorry, unable to load classes" , e);
        }
    }

    public static void register(String className, BasePage instance, Field[] fields) {
        if (className != null && instance != null) {
            instances.put(className, instance);
            classVariables.put(className, fields);
        }
    }

    static BasePage getInstance(String className) {
        if (instances.containsKey(className)) {
            return instances.get(className);
        }
        return null;
    }

    private static void loadClasses(ClassLoader cl) throws Exception {

        String dottedPackage = PATH_TO_PAGES_PKG.replaceAll("[/]", ".");

        URL upackage = cl.getResource(PATH_TO_PAGES_PKG);
        assert upackage != null;
        URLConnection conn = upackage.openConnection();

        String rr = IOUtils.toString(conn.getInputStream(), StandardCharsets.UTF_8);

        if (rr != null) {
            String[] paths = rr.split("\n");

            for (String p : paths) {
                if (p.endsWith(".class")) {
                    Class.forName(dottedPackage + "." + p.substring(0, p.lastIndexOf('.')));
                }

            }
        }
    }
}
